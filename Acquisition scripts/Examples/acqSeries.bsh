// Example script for acquiring a time-series of averaged IRIS images
import ij.*;
import ij.IJ;
import ij.ImagePlus;
import ij.plugin.ZProjector;
// addClassPath("C:/_instrument files/IRIS-API/");

addClassPath("/Users/derin/IRIS software/IRIS-API/");
importCommands("Acquisition scripts/");

configName = "LEDs";
String[] channels = new String[] {"Blue", "Green", "Yellow", "Red"};
nFrames = 4; // average 32 frames for each channel

irisAcq = IrisAcquisitions();


deltaT = 3; // time in seconds between acquisitions
exptT = 8; // Acquisition time in seconds
timepoints = new ArrayList();

store = mm.data().createRAMDatastore();
disp = mm.displays().createDisplay(store);

coordsBuilder = mm.data().getCoordsBuilder();
metaBuilder = mm.data().getMetadataBuilder();


running = true;
startTime = System.currentTimeMillis()/1000.0;

while (running){
	// Acquire a multicolor image and add it to the hyperstack
	thisImp = irisAcq.multiChannel(configName, channels, nFrames);
	myTime = System.currentTimeMillis()/1000.0-startTime;
	for(int k=1; k<5; k++){
		myCoords = coordsBuilder.time(timepoints.size()).channel(k-1).build();
		myMeta = metaBuilder.bitDepth(16).elapsedTimeMs(myTime*1000.0).build();
		thisImg = mm.data().createImage(thisImp.getStack().getProcessor(k).getPixels(), (int)irisAcq.width, (int)irisAcq.height,thisImg.getBytesPerPixel(),1,myCoords, myMeta);
		store.putImage(thisImg);
	}

	// Check if experiment is over, and wait for next timepoint.
	myTime = System.currentTimeMillis()/1000.0-startTime;
	timepoints.add(myTime);
	running = myTime < exptT;
	targetTime = startTime + deltaT*timepoints.size();
	while ( System.currentTimeMillis()/1000.0 < targetTime){
		Thread.sleep(100);
	}	
}
mm.displays().manage(store);
print("DONE");