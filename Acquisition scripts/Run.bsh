// This is the main 'run' script for IRIS acquisition
// It handles most of the logic of switching between different panels/acquisition modes.
// 
// Derin Sevenler, Boston University 2017
// derin@bu.edu

import ij.*;
import ij.IJ;
import ij.ImagePlus;
import ij.plugin.ZProjector;
import ij.gui.*; 
import java.text.DecimalFormat;
import org.micromanager.internal.dialogs.StageControlFrame;
import mmcorej.DeviceType;

// Magic numbers for stage control 
smallMoveX = 25;
mediumMoveX= 250;
largeMoveX = 1000;
smallMoveZ = 10;
mediumMoveZ = 100;


//addClassPath("C:/_instrument files/IRIS-API/");
 addClassPath("/Users/derin/IRIS software/IRIS-API/");
importCommands("Acquisition scripts/");

irisAcq = IrisAcquisitions();
irisPanels = IrisPanels();
irisMotion = IrisMotion();
irisProcessors = IrisProcessors();

// 1. Start-up: load a chip if necessary
helloPanel = irisPanels.makeHelloPanel();
while (helloPanel.selection.equals(""))
	Thread.sleep(100);
helloPanel.frame.setVisible(false);
helloPanel.frame.dispose();
if (irisPanels.didCancel)
	return false;

if (helloPanel.selection.equals("loadChip")){
	irisMotion.moveToLoad();
	mmc.waitForSystem();
	loadChipPanel = irisPanels.makeLoadChipPanel();
	while (loadChipPanel.loading) {
		// Wait to finish loading chip
		Thread.sleep(100);
		if (irisPanels.didCancel)
			break;
	}
	loadChipPanel.frame.setVisible(false);
	loadChipPanel.frame.dispose();
	if (irisPanels.didCancel)
		break;
} 
if (irisPanels.didCancel)
	return false;

// Move to camera station
irisMotion.moveToCamera();
mmc.waitForSystem();

// 2. Acquisition setup
// --------------------

// 2.1: Get info about chip
infoPanel = irisPanels.makeChipInfoPanel();
while (!infopanel.submitted)
	Thread.sleep(100);


// 2.2: Move to correct position while chip is dry

// Turn on live, hand tool, and open stage control frame and custom focus panel
irisProcessors.setForLive();
mm.live().setLiveMode(true);
mm.app().updateCenterAndDragListener(true);

// Go into user profile to make sure the step sizes are Ok
StageControlFrame.dispose();
userProfile = mm.app().getUserProfile();
// XY
//  getter looks like: mm.app().getUserProfile().getDouble(StageControlFrame.class, "SMALLMOVEMENT", -1);
userProfile.setDouble(StageControlFrame.class,"SMALLMOVEMENT",smallMoveX);
userProfile.setDouble(StageControlFrame.class,"MEDIUMMOVEMENT",mediumMoveX);
userProfile.setDouble(StageControlFrame.class,"LARGEMOVEMENT",largeMoveX);
// Z
// getter looks like: mm.app().getUserProfile().getDouble(StageControlFrame.class, "SMALLMOVEMENTZ" + mmc.getLoadedDevicesOfType(DeviceType.StageDevice).get(0), -1);
userProfile.setDouble(StageControlFrame.class,"SMALLMOVEMENTZ" + mmc.getLoadedDevicesOfType(DeviceType.StageDevice).get(0), smallMoveZ);
StageControlFrame.showStageControl();


adjustPanel = irisPanels.makeAdjustmentPanel();
// Wait for user to click continue
while (!adjustPanel.clicked)
	Thread.sleep(100);


// 2.35: Acquire a mirror image here
// 2.3: Flow blank solution. Ensure correct focus.


// 2.4: Acquire a wet 'pre' image, for normalization.

// 3. Acquisition proper


print("Finished");